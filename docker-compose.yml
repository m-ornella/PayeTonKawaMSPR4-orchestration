services:

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password

  produit-service:
    container_name: service-produit
    build:
      context: ../PayeTonKawaMSPR4-API-produits
    ports:
      - "${PRODUIT_PORT}:3000"
    command: npm run start
    depends_on:
      service-bdd-produit-mysql:
        condition: service_healthy
    env_file:
      - ../PayeTonKawaMSPR4-API-produits/.env

  service-bdd-produit-mysql:
    image: mysql:8.0
    container_name: bdd-produit-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD_PRODUIT}
      MYSQL_DATABASE: ${DB_NAME_PRODUIT}
      MYSQL_USER: ${DB_USER_PRODUIT}
      MYSQL_PASSWORD: ${DB_PASSWORD_PRODUIT}
    ports:
      - "${DB_FORWARD_PORT_PRODUIT}:3306"
    volumes:
      - mysql_data_produit:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-p${DB_ROOT_PASSWORD_PRODUIT}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  commandes-service:
    container_name: service-commandes
    build:
      context: ../PayeTonKawaMSPR4-API-commands
    ports:
      - "${COMMANDE_PORT}:3000"
    command: npm run start
    depends_on:
      service-bdd-commandes-mysql:
        condition: service_healthy
    env_file:
      - ../PayeTonKawaMSPR4-API-commands/.env

  service-bdd-commandes-mysql:
    image: mysql:8.0
    container_name: bdd-commandes-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD_COMMANDES}
      MYSQL_DATABASE: ${DB_NAME_COMMANDES}
      MYSQL_USER: ${DB_USER_COMMANDES}
      MYSQL_PASSWORD: ${DB_PASSWORD_COMMANDES}
    ports:
      - "${DB_FORWARD_PORT_COMMANDES}:3306"
    volumes:
      - mysql_data_commandes:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-p${DB_ROOT_PASSWORD_COMMANDES}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  client-service:
    container_name: service-client
    build:
      context: ../PayeTonKawaMSPR4-API-Client
    ports:
      - "${CLIENT_PORT}:3000"
    command: ["/wait-for-it.sh", "service-bdd-client-mysql:3306", "--", "npm", "run", "start"]
    depends_on:
      service-bdd-client-mysql:
        condition: service_healthy
    env_file:
      - ../PayeTonKawaMSPR4-API-Client/.env

  service-bdd-client-mysql:
    image: mysql:8.0
    container_name: bdd-client-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD_CLIENT}
      MYSQL_DATABASE: ${DB_NAME_CLIENT}
      MYSQL_USER: ${DB_USER_CLIENT}
      MYSQL_PASSWORD: ${DB_PASSWORD_CLIENT}
    ports:
      - "${DB_FORWARD_PORT_CLIENT}:3306"
    volumes:
      - mysql_data_client:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-p${DB_ROOT_PASSWORD_CLIENT}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  mysql_data_produit:
  mysql_data_commandes:
  mysql_data_client: